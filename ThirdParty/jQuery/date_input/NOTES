An explanation of the changeDayTo() function
--------------------------------------------

Think of a continuous repeating number line like:

  .. 5 6 0 1 2 3 4 5 6 0 1 2 3 4 5 6 0 1 ..

We are essentially trying to find the difference between two numbers
on the line in one direction (dictated by the sign of direction variable).
Unfortunately Javascript's modulo operator works such that -5 % 7 = -5,
instead of -5 % 7 = 2, so we need to only work with the positives.

To find the difference between 1 and 4, going backwards, we can treat 1
as (1 + 7) = 8, so the different is |8 - 4| = 4. If we don't cross the 
boundary between 0 and 6, for instance to find the backwards difference
between 5 and 2, |(5 + 7) - 2| = |12 - 2| = 10. And 10 % 7 = 3.

Going forwards, to find the difference between 4 and 1, we again treat 1
as (1 + 7) = 8, and the difference is |4 - 8| = 4. If we don't cross the
boundary, the difference between 2 and 5 is |2 - (5 + 7)| = |2 - 12| = 10.
And 10 % 7 = 3.

Once we have the positive difference in either direction represented as a
absolute value, we can multiply it by the direction variable to get the difference
in the desired direction.

We can condense the two methods into a single equation:

  backwardsDifference = direction * (|(currentDayNum + 7) - toDayNum| % 7)
                      = direction * (|currentDayNum - toDayNum + 7|  % 7)
  
    forwardsDifference = direction * (|currentDayNum - (toDayNum + 7)| % 7)
                      = direction * (|currentDayNum - toDayNum - 7| % 7)
  
  (The two equations now differ only by the +/- 7)
  
            difference = direction * (|currentDayNum - toDayNum - (direction * 7)| % 7)
